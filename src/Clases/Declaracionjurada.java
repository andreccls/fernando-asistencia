package Clases;
// Generated 03-may-2013 3:30:36 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.swing.JOptionPane;

/**
 * Declaracionjurada generated by hbm2java
 */
public class Declaracionjurada  implements java.io.Serializable {


     private Integer idDeclaracionjurada;
     private Personal personal;
     private Anolectivo anolectivo;
     private String observacion;
     private Set<DetalleEstablecimiento> detalleEstablecimientos = new HashSet<DetalleEstablecimiento>(0);

    public Declaracionjurada() {
    }

	
    public Declaracionjurada(Personal personal, Anolectivo anolectivo) {
        this.personal = personal;
        this.anolectivo = anolectivo;
    }
    public Declaracionjurada(Personal personal, Anolectivo anolectivo, String observacion, Set<DetalleEstablecimiento> detalleEstablecimientos) {
       this.personal = personal;
       this.anolectivo = anolectivo;
       this.observacion = observacion;
       this.detalleEstablecimientos = detalleEstablecimientos;
    }
   
    public Integer getIdDeclaracionjurada() {
        return this.idDeclaracionjurada;
    }
    
    public void setIdDeclaracionjurada(Integer idDeclaracionjurada) {
        this.idDeclaracionjurada = idDeclaracionjurada;
    }
    public Personal getPersonal() {
        return this.personal;
    }
    
    public void setPersonal(Personal personal) {
        this.personal = personal;
    }
    public Anolectivo getAnolectivo() {
        return this.anolectivo;
    }
    
    public void setAnolectivo(Anolectivo anolectivo) {
        this.anolectivo = anolectivo;
    }
    public String getObservacion() {
        return this.observacion;
    }
    
    public void setObservacion(String observacion) {
        this.observacion = observacion;
    }
    public Set<DetalleEstablecimiento> getDetalleEstablecimientos() {
        return this.detalleEstablecimientos;
    }
    
    public void setDetalleEstablecimientos(Set<DetalleEstablecimiento> detalleEstablecimientos) {
        this.detalleEstablecimientos = detalleEstablecimientos;
    }

//// GENERADO POR GONZALEZ FERNANDO

    public void guardarDeclaracionjurada(Declaracionjurada unaDeclaracionjurada){
        Controlador.getPERSISTENCIA().insert(this);

        JOptionPane.showMessageDialog(null,"La Declaración jurada creo correctamente","Registrar declaración jurada",JOptionPane.INFORMATION_MESSAGE);
    }
   
    public void ActualizarDeclaracionjurada(Declaracionjurada unaDeclaracionjurada){
        Controlador.getPERSISTENCIA().update(this);

        JOptionPane.showMessageDialog(null,"La Declaración jurada se actualizó correctamente","Actualizar declaración jurada",JOptionPane.INFORMATION_MESSAGE);
    }
    
    
    public DetalleEstablecimiento getDetalleEstablecimiento(Establecimiento est) {
        DetalleEstablecimiento detalle=new DetalleEstablecimiento();
        Iterator it=detalleEstablecimientos.iterator();
           while(it.hasNext()){
           DetalleEstablecimiento c=(DetalleEstablecimiento) it.next();
           int uno=c.getEstablecimiento().getIdEstablecimiento();
           int dos=est.getIdEstablecimiento();
           if(uno==dos){
               detalle=c;
               break;
           }
         }
        return detalle;
    }
    
    public void crearDetalleEstablecimiento(Declaracionjurada declaracionjurada, Establecimiento establecimiento, Set<Cargo> cargos){
        DetalleEstablecimiento unDetalleEstablecimiento=new DetalleEstablecimiento (declaracionjurada,establecimiento,cargos);
        //if(!existePersonal(unPersonal)){
            unDetalleEstablecimiento.guardarDetalleEstablecimiento(unDetalleEstablecimiento);
            //agregarReserva(unaReserva);
        //} 
     }
    
    public Set<Activo> ObtenerActivos (String di){
        Set<Activo> ini = new HashSet<Activo>(0);
        Iterator itdet=detalleEstablecimientos.iterator();
        while(itdet.hasNext()){
            DetalleEstablecimiento det=(DetalleEstablecimiento) itdet.next();
            Iterator itcar=det.getCargos().iterator();
            while(itcar.hasNext()){
                Cargo car=(Cargo) itcar.next();
                Iterator itniv=car.getNivels().iterator();
                while(itniv.hasNext()){
                    Nivel niv=(Nivel) itniv.next();
                    Iterator itact=niv.getActivos().iterator();
                    while(itact.hasNext()){
                        Activo act=(Activo) itact.next();
                        if(act.getDia().equals(di)){
                            ini.add(act);
                        }
                    }
                }
            }
        }
        return ini;
    }


}


