package Clases;
// Generated 13/11/2012 05:20:48 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.swing.JOptionPane;

/**
 * Departamento generated by hbm2java
 */
public class Departamento  implements java.io.Serializable {


     private Integer idDepartamento;
     private Establecimiento establecimiento;
     private String nombre;
     private Set<PersonalDepartamento> personalDepartamentos = new HashSet<PersonalDepartamento>(0);

    public Departamento() {
    }

	
    public Departamento(Establecimiento establecimiento) {
        this.establecimiento = establecimiento;
    }
    public Departamento(Establecimiento establecimiento, String nombre, Set<PersonalDepartamento> personalDepartamentos) {
       this.establecimiento = establecimiento;
       this.nombre = nombre;
       this.personalDepartamentos = personalDepartamentos;
    }
    
     @Override
    public String toString() {
        return nombre;
    }
   
    public Integer getIdDepartamento() {
        return this.idDepartamento;
    }
    
    public void setIdDepartamento(Integer idDepartamento) {
        this.idDepartamento = idDepartamento;
    }
    public Establecimiento getEstablecimiento() {
        return this.establecimiento;
    }
    
    public void setEstablecimiento(Establecimiento establecimiento) {
        this.establecimiento = establecimiento;
    }
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    public Set<PersonalDepartamento> getPersonalDepartamentos() {
        return this.personalDepartamentos;
    }
    
    public void setPersonalDepartamentos(Set<PersonalDepartamento> personalDepartamentos) {
        this.personalDepartamentos = personalDepartamentos;
    }

//// GENERADO POR GONZALEZ FERNANDO
    
    
    public void guardarDepartamento(Departamento unDepartamento){
        Controlador.getPERSISTENCIA().insert(this);

        JOptionPane.showMessageDialog(null,"El Departamento "+ 
                String.valueOf(unDepartamento.getIdDepartamento()) +
                " se guardo correctamente","Mensaje",JOptionPane.INFORMATION_MESSAGE);
    }
    
    public void eliminarDepartamento(Departamento unDepartamento){
        Iterator it=personalDepartamentos.iterator();
        if(it.hasNext()){
            JOptionPane.showMessageDialog(null,"El Departamento no se puede eliminar porque esta relacionada con otros personales","Mensaje",JOptionPane.INFORMATION_MESSAGE);
        }else{
        Controlador.getPERSISTENCIA().delete(this);
        JOptionPane.showMessageDialog(null,"El Departamento "+ 
                String.valueOf(unDepartamento.getIdDepartamento()) +
                " se elimin√≥ correctamente","Mensaje",JOptionPane.INFORMATION_MESSAGE);
        }
    }


}


