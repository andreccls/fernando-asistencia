/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Clases.Anolectivo;
import Clases.Auditoria;
import Clases.Controlador;
import Clases.Curso;
import Clases.Division;
import Clases.Establecimiento;
import Clases.Personal;
import Clases.Tarea;
import java.awt.Frame;
import java.awt.Image;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fernando
 */
public class JFrameAltaClases extends javax.swing.JFrame {

    /**
     * Creates new form JFrameAltaClases
     */
    Controlador Drive;
    Personal adm=new Personal();
    Anolectivo lectivo;

    public JFrameAltaClases(Controlador unDrive,Personal admin) {
        this.adm=admin;
        this.Drive=unDrive;
        initComponents();
        lectivo=Drive.getAnoLectivo();
        if(lectivo.getIdAnolectivo()!=null){
            jComboBox3.addItem(lectivo);
            Calendar cal=Calendar.getInstance();
            cal.setTime(lectivo.getFin());
            dateChooserCombo2.setSelectedDate(cal);
            cal.setTime(lectivo.getInicio());
            dateChooserCombo1.setSelectedDate(cal);
            Drive.CargarComboCursos(jComboBox2, lectivo.getAno());
        }else{
            jLabel31.setEnabled(false);
            jLabel32.setEnabled(false);
            jLabel33.setEnabled(false);
            jLabel34.setEnabled(false);
            jLabel35.setEnabled(false);
            jLabel36.setEnabled(false);
            jButton1.setEnabled(false);
            jButton3.setEnabled(false);
            jButton4.setEnabled(false);
        }
        ImageIcon fott1 = new ImageIcon(getClass().getResource("/imagenes/no.png"));
        Icon icono1 = new ImageIcon(fott1.getImage().getScaledInstance(25, 25, Image.SCALE_DEFAULT));
        jButton3.setIcon(icono1);
        ImageIcon fott2 = new ImageIcon(getClass().getResource("/imagenes/ok.png"));
        Icon icono2 = new ImageIcon(fott2.getImage().getScaledInstance(25, 25, Image.SCALE_DEFAULT));
        jButton4.setIcon(icono2);
        
        ImageIcon fott3 = new ImageIcon(getClass().getResource("/imagenes/image.jpg"));
        Icon icono3 = new ImageIcon(fott3.getImage().getScaledInstance(jLabel32.getWidth(), jLabel32.getHeight(), Image.SCALE_DEFAULT));
        jLabel31.setIcon(icono3);
        jLabel33.setIcon(icono3);
        ImageIcon fott4 = new ImageIcon(getClass().getResource("/imagenes/Editar.png"));
        Icon icono4 = new ImageIcon(fott4.getImage().getScaledInstance(jLabel32.getWidth(), jLabel32.getHeight(), Image.SCALE_DEFAULT));
        jLabel32.setIcon(icono4);
        jLabel35.setIcon(icono4);
        ImageIcon fott5 = new ImageIcon(getClass().getResource("/imagenes/eliminar.gif"));
        Icon icono5 = new ImageIcon(fott5.getImage().getScaledInstance(jLabel32.getWidth(), jLabel32.getHeight(), Image.SCALE_DEFAULT));
        jLabel34.setIcon(icono5);
        jLabel36.setIcon(icono5);
        ImageIcon fott6 = new ImageIcon(getClass().getResource("/imagenes/Nuevo.png"));
        Icon icono6 = new ImageIcon(fott6.getImage().getScaledInstance(25, 25, Image.SCALE_DEFAULT));
        jButton1.setIcon(icono6);
        dateChooserCombo1.setEnabled(false);
        dateChooserCombo2.setEnabled(false);
//        if(adm.getPerfil().getConfiguracioneli()==null){
//            jButton2.setEnabled(false);
//        }
        if(adm.getPerfil().getConfiguracionins()==null){
            jButton1.setEnabled(false);
            jTable1.setEnabled(false);
            jLabel33.setEnabled(false);
            jLabel31.setEnabled(false);
        }
        if(adm.getPerfil().getConfiguracionact()==null){
            jButton4.setEnabled(false);
            jTable1.setEnabled(false);
            jLabel32.setEnabled(false);
            jLabel35.setEnabled(false);
        }
        if(adm.getPerfil().getConfiguracioneli()==null){
            jLabel36.setEnabled(false);
            jLabel34.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        dateChooserCombo2 = new datechooser.beans.DateChooserCombo();
        jLabel31 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SISTEMA DE ASISTENCIA DE PERSONAL EDUCATIVO");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingrese los cursos"));

        jLabel2.setText("División:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Estado", "Materia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jTable1ComponentResized(evt);
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jButton1.setText("Nuevo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Aceptar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("Año lectivo:");

        jLabel3.setText("Inicio:");

        jLabel4.setText("Fin:");

        jLabel31.setText("N");
        jLabel31.setMaximumSize(new java.awt.Dimension(15, 15));
        jLabel31.setMinimumSize(new java.awt.Dimension(15, 15));
        jLabel31.setPreferredSize(new java.awt.Dimension(15, 15));
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel31MouseClicked(evt);
            }
        });

        jLabel34.setText("E");
        jLabel34.setPreferredSize(new java.awt.Dimension(15, 15));
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
        });

        jLabel32.setText("Ed");
        jLabel32.setMaximumSize(new java.awt.Dimension(15, 15));
        jLabel32.setMinimumSize(new java.awt.Dimension(15, 15));
        jLabel32.setPreferredSize(new java.awt.Dimension(15, 15));
        jLabel32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel32MouseClicked(evt);
            }
        });

        jLabel5.setText("Año:");

        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jLabel33.setText("N");
        jLabel33.setMaximumSize(new java.awt.Dimension(15, 15));
        jLabel33.setMinimumSize(new java.awt.Dimension(15, 15));
        jLabel33.setPreferredSize(new java.awt.Dimension(15, 15));
        jLabel33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel33MouseClicked(evt);
            }
        });

        jLabel35.setText("Ed");
        jLabel35.setMaximumSize(new java.awt.Dimension(15, 15));
        jLabel35.setMinimumSize(new java.awt.Dimension(15, 15));
        jLabel35.setPreferredSize(new java.awt.Dimension(15, 15));
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });

        jLabel36.setText("E");
        jLabel36.setPreferredSize(new java.awt.Dimension(15, 15));
        jLabel36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel36MouseClicked(evt);
            }
        });

        jComboBox3.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton3, jButton4});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {dateChooserCombo1, dateChooserCombo2, jComboBox3});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked
        Object o=jComboBox2.getSelectedItem();
        if(o!=null){
            Curso cu=(Curso) o;
            JTextField salida = new JTextField();
            String cadSalida;
            salida.setText("");
            salida.setSize(25, 25);

            JOptionPane.showMessageDialog(null,salida, "Ingrese una nueva división", JOptionPane.INFORMATION_MESSAGE);
            if (!salida.getText().isEmpty()&&salida.getText().length() <= 45) {
                cadSalida = salida.getText().toUpperCase();
                Iterator it = Drive.PERSISTENCIA.getDivisiones(cu.getIdCurso()).iterator();
                boolean w = false;
                while (it.hasNext()) {
                    Division div = (Division) it.next();
                    if (div.getNombre().equals(cadSalida)) {
                        JOptionPane.showMessageDialog(null, "La división ya existe", "Registrar División", JOptionPane.ERROR_MESSAGE);
                        w = true;
                    }
                }
                if (w == false) {
                    if (adm.getIdPersonal() != null) {
                        Division div = new Division();
                        div.setNombre(cadSalida);
                        div.setCurso(cu);
                        div.guardarDivision(div);
                        Drive.LimpiarCombo(jComboBox1);
                        Drive.CargarComboDivision(jComboBox1, cu);
                        jComboBox1.setSelectedItem(div);
                    } else {
                        JOptionPane.showMessageDialog(null, "Todavia no puede dar de alta un departamento", "Registrar Departamento", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }else {
                JOptionPane.showMessageDialog(null, "La Division no puede estar vacio y puede contener hasta 45 caracteres", "Registrar División", JOptionPane.ERROR_MESSAGE);
            }
        } else{
            JOptionPane.showMessageDialog(null, "Debe existir un año para poder registrar una división", "Registrar División", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel31MouseClicked

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
        int confirmado = JOptionPane.showConfirmDialog(null,"¿Desea eliminar la Division?","Eliminar Division",JOptionPane.YES_NO_OPTION);
        if (JOptionPane.OK_OPTION == confirmado){
            Division div=(Division) jComboBox1.getSelectedItem();
            Curso cu=div.getCurso();
            div.EliminarDivision(div);
            Drive.LimpiarCombo(jComboBox1);
            Drive.CargarComboDivision(jComboBox1, cu);
        }
    }//GEN-LAST:event_jLabel34MouseClicked

    private void jLabel32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseClicked
        Object o=jComboBox1.getSelectedItem();
        if(o!=null){
            Division div = (Division) o;
            JTextField salida = new JTextField();
            String cadSalida;
            salida.setText("");
            salida.setSize(25, 25);

            JOptionPane.showMessageDialog(null,salida, "Ingrese el nuevo nombre de la división", JOptionPane.INFORMATION_MESSAGE);
            if (!salida.getText().isEmpty()&&salida.getText().length() <= 45) {
                cadSalida = salida.getText().toUpperCase();
                Curso cu=div.getCurso();
                Iterator it = Drive.PERSISTENCIA.getDivisiones(cu.getIdCurso()).iterator();
                boolean w = false;
                while (it.hasNext()) {
                    Division di = (Division) it.next();
                    if (di.getNombre().equals(cadSalida)) {
                        JOptionPane.showMessageDialog(null, "La División ya existe", "Editar Division", JOptionPane.ERROR_MESSAGE);
                        w = true;
                    }
                }
                if (w == false) {
                    if (adm.getIdPersonal() != null) {
                        div.setNombre(cadSalida);
                        div.ActualizarDivision(div);
                        Drive.LimpiarCombo(jComboBox1);
                        Drive.CargarComboDivision(jComboBox1, cu);
                        jComboBox1.setSelectedItem(div);
                    } else {
                        JOptionPane.showMessageDialog(null, "Todavia no puede actualizar una Division", "Editar Division", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }else {
                JOptionPane.showMessageDialog(null, "El año no puede estar vacio y puede contener hasta 45 caracteres", "Editar Division", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "No seleccionó ninguna división", "Editar Division", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel32MouseClicked

    private void jLabel33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseClicked
        JTextField salida = new JTextField();
        String cadSalida;
        salida.setText("");
        salida.setSize(25, 25);

        JOptionPane.showMessageDialog(null,salida, "Ingrese un nuevo año", JOptionPane.INFORMATION_MESSAGE);
        if (!salida.getText().isEmpty()&&salida.getText().length() <= 45) {
            cadSalida = salida.getText().toUpperCase();
            Iterator it = Drive.PERSISTENCIA.getCursos(lectivo.getAno()).iterator();
            boolean w = false;
            while (it.hasNext()) {
                Curso cu = (Curso) it.next();
                if (cu.getNombre().equals(cadSalida)) {
                    JOptionPane.showMessageDialog(null, "El año ya existe", "Registrar Año", JOptionPane.ERROR_MESSAGE);
                    w = true;
                }
            }
            if (w == false) {
                if (adm.getIdPersonal() != null) {
                    Curso cur = new Curso();
                    cur.setNombre(cadSalida);
                    cur.setAnolectivo(lectivo);
                    cur.setEstablecimiento(Drive.getPrimerEstablecimiento());
                    cur.guardarCurso(cur);
                    Drive.LimpiarCombo(jComboBox2);
                    Drive.CargarComboCursos(jComboBox2, lectivo.getAno());
                    jComboBox2.setSelectedItem(cur);
                } else {
                    JOptionPane.showMessageDialog(null, "Todavia no puede dar de alta un año", "Registrar año", JOptionPane.ERROR_MESSAGE);
                }
            }
        }else {
            JOptionPane.showMessageDialog(null, "El año no puede estar vacio y puede contener hasta 45 caracteres", "Registrar año", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel33MouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
        Object o=jComboBox2.getSelectedItem();
        if(o!=null){
            Curso cur = (Curso) o;
            JTextField salida = new JTextField();
            String cadSalida;
            salida.setText("");
            salida.setSize(25, 25);

            JOptionPane.showMessageDialog(null,salida, "Ingrese el nuevo nombre del año", JOptionPane.INFORMATION_MESSAGE);
            if (!salida.getText().isEmpty()&&salida.getText().length() <= 45) {
                cadSalida = salida.getText().toUpperCase();
                Iterator it = Drive.PERSISTENCIA.getCursos(lectivo.getAno()).iterator();
                boolean w = false;
                while (it.hasNext()) {
                    Curso cu = (Curso) it.next();
                    if (cu.getNombre().equals(cadSalida)) {
                        JOptionPane.showMessageDialog(null, "El año ya existe", "Editar Año", JOptionPane.ERROR_MESSAGE);
                        w = true;
                    }
                }
                if (w == false) {
                    if (adm.getIdPersonal() != null) {
                        cur.setNombre(cadSalida);
                        cur.ActualizarCurso(cur);
                        Drive.LimpiarCombo(jComboBox2);
                        Drive.CargarComboCursos(jComboBox2, lectivo.getAno());
                        jComboBox2.setSelectedItem(cur);
                    } else {
                        JOptionPane.showMessageDialog(null, "Todavia no puede actualizar un año", "Editar año", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }else {
                JOptionPane.showMessageDialog(null, "El año no puede estar vacio y puede contener hasta 45 caracteres", "Editar año", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "No seleccionó ningun año", "Editar año", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jLabel35MouseClicked

    private void jLabel36MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel36MouseClicked
        int confirmado = JOptionPane.showConfirmDialog(null,"¿Desea eliminar el año?","Eliminar año",JOptionPane.YES_NO_OPTION);
        if (JOptionPane.OK_OPTION == confirmado){
            Curso cu=(Curso) jComboBox2.getSelectedItem();
            cu.EliminarCurso(cu);
            Drive.LimpiarCombo(jComboBox2);
            Drive.CargarComboCursos(jComboBox2, lectivo.getAno());
        }
    }//GEN-LAST:event_jLabel36MouseClicked

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        Object o = jComboBox2.getSelectedItem();
        if(o!=null){
            Curso cu=(Curso) o;
            Drive.LimpiarCombo(jComboBox1);
            Drive.CargarComboDivision(jComboBox1, cu);
        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        Object o=jComboBox1.getSelectedItem();
        if(o!=null){
            Division div=(Division) o;
            Drive.CargarTablaMaterias(jTable1, div);
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int confirmado = JOptionPane.showConfirmDialog(null, "¿Desea volver al menú principal?", "Alta Clases", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.OK_OPTION == confirmado) {
            Frame vp = new JFramePrincipal(Drive,adm);
            this.dispose();
            vp.show();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int confirmado = JOptionPane.showConfirmDialog(null, "¿Desea volver al menú principal?", "Alta Clases", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.OK_OPTION == confirmado) {
            Frame vp = new JFramePrincipal(Drive,adm);
            this.dispose();
            vp.show();
        }
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Object o=jComboBox1.getSelectedItem();
        if(o!=null){
            Division div=(Division) o;
            JTextField salida = new JTextField();
            String cadSalida;
            salida.setText("");
            salida.setSize(25, 25);

            JOptionPane.showMessageDialog(null,salida, "Ingrese una nueva Clase", JOptionPane.INFORMATION_MESSAGE);
            if (!salida.getText().isEmpty()&&salida.getText().length() <= 20) {
                cadSalida = salida.getText().toUpperCase();
                if (adm.getIdPersonal() != null) {
                    Tarea tar=new Tarea();
                    tar.setNombre(cadSalida);
                    Establecimiento es=Drive.getPrimerEstablecimiento();
                    tar.setEstablecimiento(es);
                    tar.setDivision(div);
                    tar.setEstado(true);
                    tar.setComentario("CLASE");
                    tar.guardarTarea(tar);
                    // <editor-fold defaultstate="collapsed" desc="Auditoria"> 
                    Auditoria audi= new Auditoria();
                    audi.setPersonalByIdAuditor(adm);
                    audi.setOperacion("Insertar");
                    audi.setFecha(new Date());
                    audi.setTarea(tar);
                    audi.guardarAuditoria(audi);
                    // </editor-fold>
                    DefaultTableModel temp = (DefaultTableModel) jTable1.getModel();        
                    Object nuevo[]= {tar.getEstado(),tar};
                    temp.addRow(nuevo);
                } else {
                    JOptionPane.showMessageDialog(null, "Todavia no puede dar de alta una Clase", "Registrar Clase", JOptionPane.ERROR_MESSAGE);
                }
            }else {
                JOptionPane.showMessageDialog(null, "La Clase no puede estar vacio y puede contener hasta 20 caracteres", "Registrar Clase", JOptionPane.ERROR_MESSAGE);
            }
        } else{
            JOptionPane.showMessageDialog(null, "Debe existir una división para poder registrar una Clase", "Registrar Clase", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
//        int e=0;
//        while(jTable1.getColumnCount()!=e){
//            Tarea tar=(Tarea) jTable1.getValueAt(e, 1);
//            String nuevo=jTable1.getValueAt(e, 1).toString();
//            Boolean est=(Boolean) jTable1.getValueAt(e, 0);
//            if(!tar.getNombre().equals(nuevo)){
//                tar.setNombre(nuevo);
//                tar.ActualizarTarea(tar);
//                Object o=jComboBox1.getSelectedItem();
//                if(o!=null){
//                    Division div=(Division) o;
//                    Drive.CargarTablaMaterias(jTable1, div);
//                }
//            }
//            if(tar.getEstado()!=est){
//                tar.setEstado(est);
//                tar.ActualizarTarea(tar);
//            }
//        }
//        
//                
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
//        int e=jTable1.getSelectedRow();
//        if(e>-1){
//            String nuevo=jTable1.getValueAt(e, 1).toString();
//            if(!ta.getNombre().equals(nuevo)){
//                ta.setNombre(nuevo);
//                ta.ActualizarTarea(ta);
//                ta=new Tarea();
//            }
//        }
//        Object o=jComboBox1.getSelectedItem();
//        if(o!=null){
//            Division div=(Division) o;
//            Drive.CargarTablaMaterias(jTable1, div);
//        }
    }//GEN-LAST:event_jTable1PropertyChange

    private void jTable1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentResized

    }//GEN-LAST:event_jTable1ComponentResized

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        try {
            if (evt.getClickCount() == 2) {
                jTable1.getModel();
                Tarea ta = (Tarea) jTable1.getValueAt(jTable1.rowAtPoint(evt.getPoint()), 1);
                JTextField nombre = new JTextField();
                String cadNombre;
                nombre.setText("");
                nombre.setSize(25, 25);
                JOptionPane.showMessageDialog(null, nombre, "Ingrese el nuevo nombre de "+ta, JOptionPane.INFORMATION_MESSAGE);
                if (!nombre.getText().isEmpty()) {
                    cadNombre = nombre.getText().toUpperCase();
                    ta.setNombre(cadNombre);
                    ta.ActualizarTarea(ta);
                    jTable1.setValueAt(ta,jTable1.rowAtPoint(evt.getPoint()), 1);
                    Object o=jComboBox1.getSelectedItem();
                    if(o!=null){
                        Division div=(Division) o;
                        Drive.CargarTablaMaterias(jTable1, div);
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_jTable1MouseReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            int ii=jTable1.columnAtPoint(evt.getPoint());
            if(ii==0){
            boolean est = (Boolean) jTable1.getValueAt(jTable1.rowAtPoint(evt.getPoint()), 0);
            if (est == false) {
                jTable1.getModel();
                Tarea ta = (Tarea) jTable1.getValueAt(jTable1.rowAtPoint(evt.getPoint()), 1);
                int confirmado = JOptionPane.showConfirmDialog(null, "¿Esta seguro que desea desactivar la tarea y todos sus horarios de "+ta+"?", "Eliminar tarea", JOptionPane.YES_NO_OPTION);
                if (JOptionPane.OK_OPTION == confirmado) {
                    ta.setEstado(false);
                    ta.ActualizarTarea(ta);
                    Auditoria audi = new Auditoria();
                    audi.setPersonalByIdAuditor(adm);
                    audi.setTarea(ta);
                    audi.setOperacion("Eliminar");
                    audi.setFecha(new Date());
                    audi.guardarAuditoria(audi);
                    
                    Object o=jComboBox1.getSelectedItem();
                    if(o!=null){
                        Division div=(Division) o;
                        Drive.CargarTablaMaterias(jTable1, div);
                    }
                }else{
//                    jTable1.setValueAt(true,jTable1.rowAtPoint(evt.getPoint()), 0);
                    Object o=jComboBox1.getSelectedItem();
                    if(o!=null){
                        Division div=(Division) o;
                        Drive.CargarTablaMaterias(jTable1, div);
                    }
                }
            }else{
                jTable1.getModel();
                Tarea ta = (Tarea) jTable1.getValueAt(jTable1.rowAtPoint(evt.getPoint()), 1);
                int confirmado = JOptionPane.showConfirmDialog(null, "¿Esta seguro que desea activar la tarea y todos sus horarios de "+ta+"?", "Eliminar tarea", JOptionPane.YES_NO_OPTION);
                if (JOptionPane.OK_OPTION == confirmado) {
                    ta.setEstado(true);
                    ta.ActualizarTarea(ta);
                    Auditoria audi = new Auditoria();
                    audi.setPersonalByIdAuditor(adm);
                    audi.setTarea(ta);
                    audi.setOperacion("Insertar");
                    audi.setFecha(new Date());
                    audi.guardarAuditoria(audi);
                    
                    Object o=jComboBox1.getSelectedItem();
                    if(o!=null){
                        Division div=(Division) o;
                        Drive.CargarTablaMaterias(jTable1, div);
                    }
                }else{
                    Object o=jComboBox1.getSelectedItem();
                    if(o!=null){
                        Division div=(Division) o;
                        Drive.CargarTablaMaterias(jTable1, div);
                    }
                }
            }
            }
//            i=0;
//            ii=0;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se ha podido eliminar la tarea", "Eliminar Tarea", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(JFrameAltaClases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(JFrameAltaClases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(JFrameAltaClases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(JFrameAltaClases.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new JFrameAltaClases().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private datechooser.beans.DateChooserCombo dateChooserCombo2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
